// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int keyAddress;
    
    /** Initializes the keyboard. */
    function void init() {
        let keyAddress = 24576;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        var int keyValue;
        
        let keyValue = Memory.peek(keyAddress);
        
        return keyValue;
        
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var int keyValue;
        var int keyCatch;
        
        let keyValue = 0;
        while (keyValue = 0) { 
            let keyValue = Keyboard.keyPressed();
        }
        let keyCatch = keyValue;
        
        // Return the key value till the keyboard is released.
        while (~(keyValue = 0)) {
            let keyValue = Keyboard.keyPressed();
        }
        do Output.printChar(keyCatch);
        return keyCatch;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String inputString;
        var char newLine;
        var char keyValue;
        
        let newLine = String.newLine();
        let inputString = String.new(64);
        
        do Output.printString(message);
        do Output.println();
        
        let keyValue = Keyboard.readChar();
        while (~(keyValue = newLine)) {
            if ((keyValue = String.backSpace()) & (inputString.length() > 0)) { do inputString.eraseLastChar(); }
            else                               { do inputString.appendChar(keyValue); }
            let keyValue = Keyboard.readChar();
        }
        do Output.printString(inputString);
        do Output.printInt(inputString.length());
        return inputString;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String inputString;
        var char newLine;
        var char keyValue;
        var boolean allowNeg;
        
        let allowNeg = true;
        let inputString = String.new(6);
        let newLine = String.newLine();
        let keyValue = -1;
        
        do Output.printString(message);
      
        while ((Keyboard.isInt(keyValue)) | allowNeg | (keyValue = String.backSpace())) {
            if (keyValue = 45) {
                do inputString.appendChar(45);
                let allowNeg = false;
            }
            
            if (Keyboard.isInt(keyValue)) {
                do inputString.appendChar(keyValue);
                let allowNeg = false;
            }
            
            if ((keyValue = String.backSpace()) & (inputString.length() > 0)) {
                do inputString.eraseLastChar();
            }
            
            if (inputString.length() = 0) {
                let allowNeg = true;
            }
            
            let keyValue = Keyboard.readChar();
        }
        return inputString.intValue();
    
    }
    
    /** Checks whether the character is a number */
    function boolean isInt(char c) {
        if ((c < 48) | (c > 57)) { return false; }
        
        return true;
    }
}
