// A math library for Jack programming languate

class Math {
    
    static Array twoToThe;
    
    
    /** Initialized statical variables */
    function void init() {
        int i;
        int fill;
        
        let twoToThe = Array.new(16);
        
        // Fill the elements at ith position wiht 2^i
        let i = 0;
        let fill = 1;
        while (i < 16) {
            let twoToThe[i] = fill;
            let fill = fill + fill;
        }
        
        return;
    }
    
    /** Calculate absolute value of the given number */
    function int abs(int x) {
        if (x < 0) { return -x; }
        return x;
    }
    
    /** Calculate x times y */
    function int multiply(int x, int y) {
        int res;
        int shiftedX;
        int i;
        
        let i = 0;
        let res = 0;
        let shiftedX = x;
        
        while (i < 16) {
            if (bit(y, i)) { let res = res + shiftedX; }
            let shiftedX = shiftedX + shiftedX;
        }
        
<<<<<<< HEAD
        return res;
=======
        return;
>>>>>>> 4f60aac2e5ccc85223f2e35cfce18f0a734269a5
    }
    
    /** Calculate x divided by y */
    function int divide(int x, int y) {
        
        int q;
        if ( x < y) { return 0; }
        
        let q = divide(x, 2*y)
        
        if ((x - (2*y*q)) < y) { return 2*q; }
        else                 { return 2*q + 1; }
    }
    
    /** Calculate the minimum between x and y */
    function int min(int x, int y) {
        if (x > y) { return y; }
        return x;
    }
    
    /** Calculate the maximum between x and y */
    function int max(int x, int y) {
        if (x > y) { return x; }
        return y;
    }
    
    /** Calculate the square root of the given x */
    function int sqrt(int x) {
        return;
    }
    
    /** Helper function to check if i's bit of a integer is 1 */
    funtion boolean bit(int x, int i) {
        return (x & twoToThe[i]) != 0;
    }
}